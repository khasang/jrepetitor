INSERT INTO public.jr_group (id, name) VALUES (1, 'Java Core');
INSERT INTO public.jr_quiz (id, level, name, group_id) VALUES (1, 1, 'Java Basics', 1);
INSERT INTO public.jr_quiz (id, level, name, group_id) VALUES (2, 1, 'Khasang', 1);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (1, 'Which of the following are features of Java?', 'It is not required for a class to have a main method. The main method is required only if you want to execute that class directly from a command line.
Further, running from command line is not the only way to test a class.', 'radio', 1);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (2, 'Given the following contents of two java source files:  package util.log4j; public class Logger  {   public void log(String msg){       System.out.println(msg);   } }  and  package util; public class TestClass {     public static void main(String[] args) throws Exception {         Logger logger = new Logger();         logger.log("hello");     } }  What changes, when made independently, will enable the code to compile and run?', 'If you are not importing a class or the package of the class, you need to use the class''s fully qualified name while using it. Here, you need to use util.log4j.Logger instead of just log4j.Logger: util.log4j.Logger logger = new util.log4j.Logger();', 'CheckBox', 1);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (3, 'Какое преобразование безопасно?', '', 'radio', 2);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (4, 'Можно ли из статического метода вызвать нестатический метод этого же класса?', null, 'radio', 2);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (5, 'Какие исключения необходимо пробрасывать или обрабатывать?', null, 'radio', 2);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (6, 'Можно ли в интерфейсе иметь статические переменные?', null, 'CheckBox', 2);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (7, 'Какой размер имеет переменная типа int в Java?', null, 'radio', 2);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (8, 'Как в сигнатуре метода указать, что метод может выбросить исключение?', null, 'radio', 2);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (9, 'Когда модификатор доступа не указан, какой подразумевается?
default ', null, 'radio', 2);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (10, 'Как правильно написать цикл, который отработает 10 раз?', null, 'CheckBox', 2);
INSERT INTO public.jr_question (id, content, explanation, type, quiz_id) VALUES (11, 'Как создать массив целых чисел размерности k * m?', null, 'CheckBox', 2);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (1, 'Every class must have a main method so that it can be tested individually from command line.', 0, 1);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (2, 'Every class belongs to a package.', 0, 1);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (3, 'A package must have more than one class.', 0, 1);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (4, 'A class may inherit from another class.', 1, 1);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (5, 'Replace Logger logger = new Logger(); with: log4j.Logger logger = new log4j.Logger();', 0, 2);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (6, 'Replace package util.log4j; with package util;', 1, 2);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (7, 'Replace Logger logger = new Logger(); with: util.log4j.Logger logger = new util.log4j.Logger();', 1, 2);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (8, 'Remove package util.log4j; from Logger.', 0, 2);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (9, 'Add import log4j; to TestClass.', 0, 2);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (10, 'Потомков в предков', 1, 3);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (11, 'Предков в потомков', 0, 3);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (12, 'Все опасны', 0, 3);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (13, 'Да', 0, 4);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (14, 'Нет', 1, 4);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (15, 'Всегда можно', 0, 4);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (16, 'Все', 0, 5);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (17, 'Неконтролируемые', 0, 5);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (18, 'Контролируемые', 1, 5);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (19, 'Да, они же будут final', 0, 6);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (20, 'Нет', 1, 6);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (21, 'Да, и необязательно им быть константами', 0, 6);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (22, '1 байт', 0, 7);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (23, '4 байта', 1, 7);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (24, '8 байт', 0, 7);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (25, 'throw', 0, 8);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (26, 'throws', 1, 8);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (27, 'return', 0, 8);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (28, 'default', 1, 9);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (29, 'public', 0, 9);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (30, 'private', 0, 9);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (31, 'protected', 0, 9);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (32, 'for (i = 0; i < 9; i++) {}', 0, 10);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (33, 'for (int i = 0; i < 10; i++) {}', 1, 10);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (34, 'for (i = 0; i < 10; i++) {}', 0, 10);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (35, 'int[][] a = new int[k][m];', 1, 11);
INSERT INTO public.jr_item (id, content, correct, question_id) VALUES (36, 'int[[]] a = new int[k[m]];', 0, 11);